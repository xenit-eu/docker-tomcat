ARG BASE_IMAGE=docker.io/xenit/openjdk:jdk-7-centos-7
FROM $BASE_IMAGE

ENV     CATALINA_HOME /usr/local/tomcat
ENV     PATH $CATALINA_HOME/bin:$PATH
WORKDIR $CATALINA_HOME

ARG TOMCAT_MAJOR
ENV TOMCAT_MAJOR ${TOMCAT_MAJOR:-7}

ARG TOMCAT_MINOR
ENV TOMCAT_MINOR ${TOMCAT_MINOR:-0}

ARG TOMCAT_REVISION
ENV TOMCAT_REVISION ${TOMCAT_REVISION:-78}

ENV TOMCAT_VERSION ${TOMCAT_MAJOR}.${TOMCAT_MINOR}.${TOMCAT_REVISION}
ENV TOMCAT_TGZ_URL https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz

ENV GOSU_VERSION=1.10
ENV GOSU_GPG_KEY=B42F6819007F00F88E364FD4036A9C25BF357DD4

ENV TOMCAT_PORT=8080

ARG RPM_LIBXSLT=http://mirror.centos.org/centos/7/os/x86_64/Packages/libxslt-1.1.28-5.el7.x86_64.rpm
ARG RPM_XMLSTARLET=http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/x/xmlstarlet-1.6.1-1.el7.x86_64.rpm

# copy init file
COPY 	85-init-tomcat.sh /docker-entrypoint.d/

RUN     env && \

        mkdir -pv "${CATALINA_HOME}/shared/classes" && \
        mkdir -pv "${CATALINA_HOME}/shared/lib" && \

        curl --silent -fSL "$TOMCAT_TGZ_URL" \
            | tar xvz \
                --exclude=webapps/* \
                --exclude=bin/*.bat \
                --strip-components=1 \
                --directory ${CATALINA_HOME} && \

        # Configure AccessLogValve & RemoteIpValve
        rpm --install --force $RPM_LIBXSLT $RPM_XMLSTARLET && \
        xmlstarlet edit --inplace \
            --var valve "/Server/Service[@name='Catalina']/Engine[@name='Catalina']/Host/Valve[@className='org.apache.catalina.valves.AccessLogValve']/@pattern" \
              --update '$valve' --value "%h %l %u %t &quot;%r&quot; %s %b %D %F" \
            --var valve "/Server/Service[@name='Catalina']/Engine[@name='Catalina']/Host/Valve[@className='org.apache.catalina.valves.AccessLogValve']" \
              --insert '$valve' --type attr --name rotatable --value \$\{TOMCAT_ACCESSLOG_ROTATE\} \
              --insert '$valve' --type attr --name maxDays --value \$\{TOMCAT_ACCESSLOG_MAXDAYS\} \	    
              --append '$valve' --type elem --name Valve \
                --var valve '$prev' \
                --insert '$valve' --type attr --name className --value org.apache.catalina.valves.RemoteIpValve \
                --insert '$valve' --type attr --name remoteIpHeader --value x-forwarded-for \
                --insert '$valve' --type attr --name remoteIpProxiesHeader --value x-forwarded-by \
                --insert '$valve' --type attr --name protocolHeader --value x-forwarded-proto \
                --insert '$valve' --type attr --name internalProxies --value "172.(?:1[6-9]|2[0-9]|3[0-1]).\d{1,3}.\d{1,3}|10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}" \
            conf/server.xml && \

        # Configure ports, header size and max threads
        xmlstarlet edit --inplace \
        --var server "/Server/@port" \
            --update '$server' --value \$\{TOMCAT_SERVER_PORT\} \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JasperListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JreMemoryLeakPreventionListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.ThreadLocalLeakPreventionListener']" \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_PORT\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@redirectPort" \
            --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]" \
            --append '$connector' --type attr --name URIEncoding --value UTF-8 \
            --append '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \
            --append '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_AJP_PORT\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@redirectPort" \
           --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        ${CATALINA_HOME}/conf/server.xml && \
        rpm --erase xmlstarlet && \

        # Create a tomcat user
        useradd -r -u 990 --shell /bin/false tomcat && \
        chown -hR tomcat ${CATALINA_HOME} && \

        # gosu
        cd /tmp && \
        gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys $GOSU_GPG_KEY && \
        gpg --fingerprint $GOSU_GPG_KEY | grep -q "Key fingerprint = B42F 6819 007F 00F8 8E36  4FD4 036A 9C25 BF35 7DD4" && \
        curl -sSL https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64.asc -o gosu.asc && \
        curl -sSL https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64 -o /usr/local/bin/gosu && \
        gpg --verify gosu.asc /usr/local/bin/gosu && \
        chmod +x /usr/local/bin/gosu && \
        rm gosu.asc && \

        sed -i 's/[a-z,.,1-9,-]*.(FileHandler|AsyncFileHandler)((,\s)|\n)//g' ${CATALINA_HOME}/conf/logging.properties && \

        sed -i 's/^shared.loader=/shared.loader=${catalina.base}\/shared\/classes,${catalina.base}\/shared\/lib\/*.jar/' ${CATALINA_HOME}/conf/catalina.properties && \
        sed -i 's/^\(common.loader=.*\)$/\1,${tomcat.common.loader.append}/' ${CATALINA_HOME}/conf/catalina.properties && \
        sed -i 's/^\(shared.loader=.*\)$/\1,${tomcat.shared.loader.append}/' ${CATALINA_HOME}/conf/catalina.properties && \

        chmod +x /docker-entrypoint.d/85-init-tomcat.sh

EXPOSE  8080
CMD ["gosu", "tomcat", "catalina.sh", "run"]
